/*buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}

	dependencies {
		classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.12.1'
	}
}*/

import org.apache.tools.ant.filters.*

// apply plugin: 'com.github.hierynomus.license'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

// default tasks
defaultTasks 'check', 'build'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

group = 'de.blablubbabc'
version = '2.3'

ext.projectName = projectName
ext.inceptionYear = inceptionYear
ext.packaging = packaging
ext.url = url
ext.description = description
ext.author = author

repositories {
	mavenCentral()
	maven {
		url "http://repo.bukkit.org/content/groups/public"
	}
	maven {
		url "https://hub.spigotmc.org/nexus/content/groups/public/"
	}
	maven {
		url "http://ci.shadowvolt.com/plugin/repository/everything/"
	}
	maven {
		url "http://repo.comphenix.net/content/groups/public/"
	}
	mavenLocal()
}

dependencies {
	compile 'org.bukkit:bukkit:1.8.8-R0.1-SNAPSHOT'
	compile 'com.comphenix.protocol:ProtocolLib:3.6.3+'
}

// include and filter resources
processResources {
	from(sourceSets.main.resources.srcDirs)
	filter {
			line ->
			line
			.replace('${name}', project.name)
			.replace('${version}', project.version)
			.replace('${author}', project.author)
			.replace('${authorAlias}', project.authorAlias)
			.replace('${url}', project.url)
			.replace('${year}', project.inceptionYear)
	}
}

// license header
/*license {
	ext.name = project.name
	ext.author = project.author
	ext.url = project.url
	ext.year = project.inceptionYear
*/
	// header file('HEADER.txt')
	// include '**/*.java'
/*
	ignoreFailures true
	strictCheck true
}*/

// source compiler configuration
configure([compileJava, compileTestJava]) {
	//options.compilerArgs += [ '-Xlint:all', '-Xlint:-path' ]
	options.deprecation = false
	options.encoding = 'utf8'
}

artifacts {
	archives jar
}

uploadArchives {
	repositories {
		mavenDeployer {
			mavenLocal()
		}
	}
}
